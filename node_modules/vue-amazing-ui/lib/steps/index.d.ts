export type { Props, Item } from './Steps';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Steps').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:current"?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        change: (...args: any[]) => void;
        "update:current": (...args: any[]) => void;
    }, import('vue').PublicProps, {
        size: "default" | "small";
        width: number | string;
        dotted: boolean;
        vertical: boolean;
        items: import('./Steps').Item[];
        labelPlacement: "right" | "bottom";
        current: number;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Steps').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:current"?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        size: "default" | "small";
        width: number | string;
        dotted: boolean;
        vertical: boolean;
        items: import('./Steps').Item[];
        labelPlacement: "right" | "bottom";
        current: number;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Steps').Props> & Readonly<{
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:current"?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    change: (...args: any[]) => void;
    "update:current": (...args: any[]) => void;
}, string, {
    size: "default" | "small";
    width: number | string;
    dotted: boolean;
    vertical: boolean;
    items: import('./Steps').Item[];
    labelPlacement: "right" | "bottom";
    current: number;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
