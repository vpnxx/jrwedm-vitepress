export type { Props } from './BackTop';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./BackTop').Props> & Readonly<{
        onClick?: ((...args: any[]) => any) | undefined;
        onShow?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        click: (...args: any[]) => void;
        show: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        description: string;
        type: "default" | "primary";
        icon: import('vue').VNode | import('vue').Slot;
        shape: "circle" | "square";
        bottom: number | string;
        right: number | string;
        tooltip: string;
        to: string | HTMLElement;
        tooltipProps: object;
        zIndex: number;
        visibilityHeight: number;
        listenTo: string | HTMLElement;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        backTopPlaceholderRef: HTMLDivElement;
    }, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./BackTop').Props> & Readonly<{
        onClick?: ((...args: any[]) => any) | undefined;
        onShow?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        description: string;
        type: "default" | "primary";
        icon: import('vue').VNode | import('vue').Slot;
        shape: "circle" | "square";
        bottom: number | string;
        right: number | string;
        tooltip: string;
        to: string | HTMLElement;
        tooltipProps: object;
        zIndex: number;
        visibilityHeight: number;
        listenTo: string | HTMLElement;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./BackTop').Props> & Readonly<{
    onClick?: ((...args: any[]) => any) | undefined;
    onShow?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    click: (...args: any[]) => void;
    show: (...args: any[]) => void;
}, string, {
    description: string;
    type: "default" | "primary";
    icon: import('vue').VNode | import('vue').Slot;
    shape: "circle" | "square";
    bottom: number | string;
    right: number | string;
    tooltip: string;
    to: string | HTMLElement;
    tooltipProps: object;
    zIndex: number;
    visibilityHeight: number;
    listenTo: string | HTMLElement;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        tooltip?(_: {}): any;
        default?(_: {}): any;
        icon?(_: {}): any;
        description?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
