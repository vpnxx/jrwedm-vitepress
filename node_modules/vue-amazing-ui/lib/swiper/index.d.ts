export type { Props, Image } from './Swiper';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Swiper').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        onSwiper?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        change: (...args: any[]) => void;
        swiper: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        mode: "banner" | "carousel" | "broadcast";
        width: number | string;
        height: number | string;
        delay: number;
        speed: number;
        images: import('./Swiper').Image[];
        pauseOnMouseEnter: boolean;
        effect: "slide" | "fade" | "cube" | "flip" | "coverflow" | "cards" | "creative";
        loop: boolean;
        navigation: boolean;
        swipe: boolean;
        preloaderColor: "theme" | "white" | "black";
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Swiper').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        onSwiper?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        mode: "banner" | "carousel" | "broadcast";
        width: number | string;
        height: number | string;
        delay: number;
        speed: number;
        images: import('./Swiper').Image[];
        pauseOnMouseEnter: boolean;
        effect: "slide" | "fade" | "cube" | "flip" | "coverflow" | "cards" | "creative";
        loop: boolean;
        navigation: boolean;
        swipe: boolean;
        preloaderColor: "theme" | "white" | "black";
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Swiper').Props> & Readonly<{
    onChange?: ((...args: any[]) => any) | undefined;
    onSwiper?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    change: (...args: any[]) => void;
    swiper: (...args: any[]) => void;
}, string, {
    mode: "banner" | "carousel" | "broadcast";
    width: number | string;
    height: number | string;
    delay: number;
    speed: number;
    images: import('./Swiper').Image[];
    pauseOnMouseEnter: boolean;
    effect: "slide" | "fade" | "cube" | "flip" | "coverflow" | "cards" | "creative";
    loop: boolean;
    navigation: boolean;
    swipe: boolean;
    preloaderColor: "theme" | "white" | "black";
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
