export type { Props as DescriptionsProps, Responsive } from './Descriptions';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Descriptions').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        size: "default" | "middle" | "small";
        title: string;
        bordered: boolean;
        contentStyle: import('vue').CSSProperties;
        column: number | import('./Descriptions').Responsive;
        vertical: boolean;
        extra: string;
        labelStyle: import('vue').CSSProperties;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        tdCols: HTMLTableCellElement[];
        trBorderedRows: HTMLTableRowElement[];
        thVerticalCols: HTMLDivElement;
        tdVerticalCols: HTMLDivElement;
        thVerticalBorderedRows: HTMLTableRowElement[];
        tdVerticalBorderedRows: HTMLTableRowElement[];
        defaultSlotsRef: HTMLDivElement;
    }, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Descriptions').Props> & Readonly<{}>, {}, {}, {}, {}, {
        size: "default" | "middle" | "small";
        title: string;
        bordered: boolean;
        contentStyle: import('vue').CSSProperties;
        column: number | import('./Descriptions').Responsive;
        vertical: boolean;
        extra: string;
        labelStyle: import('vue').CSSProperties;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Descriptions').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    size: "default" | "middle" | "small";
    title: string;
    bordered: boolean;
    contentStyle: import('vue').CSSProperties;
    column: number | import('./Descriptions').Responsive;
    vertical: boolean;
    extra: string;
    labelStyle: import('vue').CSSProperties;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        title?(_: {}): any;
        extra?(_: {}): any;
        default?(_: {}): any;
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
