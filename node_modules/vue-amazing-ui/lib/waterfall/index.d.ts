export type { Props, Image } from './Waterfall';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Waterfall').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        width: string | number;
        borderRadius: number;
        backgroundColor: string;
        columnCount: number;
        columnGap: number;
        images: import('./Waterfall').Image[];
        spinProps: object;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        waterfallRef: HTMLDivElement;
    }, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Waterfall').Props> & Readonly<{}>, {}, {}, {}, {}, {
        width: string | number;
        borderRadius: number;
        backgroundColor: string;
        columnCount: number;
        columnGap: number;
        images: import('./Waterfall').Image[];
        spinProps: object;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Waterfall').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    width: string | number;
    borderRadius: number;
    backgroundColor: string;
    columnCount: number;
    columnGap: number;
    images: import('./Waterfall').Image[];
    spinProps: object;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
