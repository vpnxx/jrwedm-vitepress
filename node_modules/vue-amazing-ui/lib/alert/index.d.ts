export type { Props } from './Alert';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Alert').Props> & Readonly<{
        onClose?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        close: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        message: string;
        description: string;
        type: "default" | "success" | "info" | "warning" | "error";
        bordered: boolean;
        closable: boolean;
        closeText: string;
        icon: string;
        showIcon: boolean;
        actions: import('vue').Slot;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        alertRef: HTMLDivElement;
    }, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Alert').Props> & Readonly<{
        onClose?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        message: string;
        description: string;
        type: "default" | "success" | "info" | "warning" | "error";
        bordered: boolean;
        closable: boolean;
        closeText: string;
        icon: string;
        showIcon: boolean;
        actions: import('vue').Slot;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Alert').Props> & Readonly<{
    onClose?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    close: (...args: any[]) => void;
}, string, {
    message: string;
    description: string;
    type: "default" | "success" | "info" | "warning" | "error";
    bordered: boolean;
    closable: boolean;
    closeText: string;
    icon: string;
    showIcon: boolean;
    actions: import('vue').Slot;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        icon?(_: {}): any;
        icon?(_: {}): any;
        default?(_: {}): any;
        description?(_: {}): any;
        actions?(_: {}): any;
        closeText?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
