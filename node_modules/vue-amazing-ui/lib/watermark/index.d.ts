export type { Props, Font } from './Watermark';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Watermark').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        fixed: boolean;
        image: string;
        width: number;
        height: number;
        content: string | string[];
        zIndex: number;
        offset: [number, number];
        layout: "parallel" | "alternate";
        rotate: number;
        gap: [number, number];
        fullscreen: boolean;
        textStyle: import('./Watermark').Font;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        containerRef: HTMLDivElement;
    }, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Watermark').Props> & Readonly<{}>, {}, {}, {}, {}, {
        fixed: boolean;
        image: string;
        width: number;
        height: number;
        content: string | string[];
        zIndex: number;
        offset: [number, number];
        layout: "parallel" | "alternate";
        rotate: number;
        gap: [number, number];
        fullscreen: boolean;
        textStyle: import('./Watermark').Font;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Watermark').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    fixed: boolean;
    image: string;
    width: number;
    height: number;
    content: string | string[];
    zIndex: number;
    offset: [number, number];
    layout: "parallel" | "alternate";
    rotate: number;
    gap: [number, number];
    fullscreen: boolean;
    textStyle: import('./Watermark').Font;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
