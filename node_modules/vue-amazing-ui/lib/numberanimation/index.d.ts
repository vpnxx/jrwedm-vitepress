export type { Props, TransitionFunc } from './NumberAnimation';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./NumberAnimation').Props> & Readonly<{
        onStarted?: ((...args: any[]) => any) | undefined;
        onFinished?: ((...args: any[]) => any) | undefined;
    }>, {
        play: () => void;
    }, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        started: (...args: any[]) => void;
        finished: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        duration: number;
        transition: import('./NumberAnimation').TransitionFunc;
        to: number;
        valueStyle: import('vue').CSSProperties;
        separator: string;
        autoplay: boolean;
        prefix: string;
        suffix: string;
        precision: number;
        from: number;
        decimal: string;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLSpanElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./NumberAnimation').Props> & Readonly<{
        onStarted?: ((...args: any[]) => any) | undefined;
        onFinished?: ((...args: any[]) => any) | undefined;
    }>, {
        play: () => void;
    }, {}, {}, {}, {
        duration: number;
        transition: import('./NumberAnimation').TransitionFunc;
        to: number;
        valueStyle: import('vue').CSSProperties;
        separator: string;
        autoplay: boolean;
        prefix: string;
        suffix: string;
        precision: number;
        from: number;
        decimal: string;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./NumberAnimation').Props> & Readonly<{
    onStarted?: ((...args: any[]) => any) | undefined;
    onFinished?: ((...args: any[]) => any) | undefined;
}>, {
    play: () => void;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    started: (...args: any[]) => void;
    finished: (...args: any[]) => void;
}, string, {
    duration: number;
    transition: import('./NumberAnimation').TransitionFunc;
    to: number;
    valueStyle: import('vue').CSSProperties;
    separator: string;
    autoplay: boolean;
    prefix: string;
    suffix: string;
    precision: number;
    from: number;
    decimal: string;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
