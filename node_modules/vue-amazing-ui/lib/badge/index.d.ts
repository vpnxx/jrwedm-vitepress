export type { Props, PresetColor, Status } from './Badge';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Badge').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        title: string;
        text: string;
        color: import('./Badge').PresetColor | string;
        zIndex: number;
        value: number | string;
        max: number;
        showZero: boolean;
        dot: boolean;
        offset: [number | string, number | string];
        status: import('./Badge').Status;
        valueStyle: import('vue').CSSProperties;
        ripple: boolean;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Badge').Props> & Readonly<{}>, {}, {}, {}, {}, {
        title: string;
        text: string;
        color: import('./Badge').PresetColor | string;
        zIndex: number;
        value: number | string;
        max: number;
        showZero: boolean;
        dot: boolean;
        offset: [number | string, number | string];
        status: import('./Badge').Status;
        valueStyle: import('vue').CSSProperties;
        ripple: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Badge').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    title: string;
    text: string;
    color: import('./Badge').PresetColor | string;
    zIndex: number;
    value: number | string;
    max: number;
    showZero: boolean;
    dot: boolean;
    offset: [number | string, number | string];
    status: import('./Badge').Status;
    valueStyle: import('vue').CSSProperties;
    ripple: boolean;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
        default?(_: {}): any;
        value?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
