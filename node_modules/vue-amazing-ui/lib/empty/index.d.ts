export type { Props } from './Empty';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Empty').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        footer: string;
        description: string;
        image: "filled" | "outlined" | string;
        descriptionStyle: import('vue').CSSProperties;
        imageStyle: import('vue').CSSProperties;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Empty').Props> & Readonly<{}>, {}, {}, {}, {}, {
        footer: string;
        description: string;
        image: "filled" | "outlined" | string;
        descriptionStyle: import('vue').CSSProperties;
        imageStyle: import('vue').CSSProperties;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Empty').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    footer: string;
    description: string;
    image: "filled" | "outlined" | string;
    descriptionStyle: import('vue').CSSProperties;
    imageStyle: import('vue').CSSProperties;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
        description?(_: {}): any;
        footer?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
