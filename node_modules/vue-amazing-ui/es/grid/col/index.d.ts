export type { Props as ColProps } from './Col';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Col').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        span: number;
        xxl: number | {
            span?: number;
            offset?: number;
        };
        xl: number | {
            span?: number;
            offset?: number;
        };
        lg: number | {
            span?: number;
            offset?: number;
        };
        md: number | {
            span?: number;
            offset?: number;
        };
        sm: number | {
            span?: number;
            offset?: number;
        };
        xs: number | {
            span?: number;
            offset?: number;
        };
        offset: number;
        flex: string | number;
        order: number;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Col').Props> & Readonly<{}>, {}, {}, {}, {}, {
        span: number;
        xxl: number | {
            span?: number;
            offset?: number;
        };
        xl: number | {
            span?: number;
            offset?: number;
        };
        lg: number | {
            span?: number;
            offset?: number;
        };
        md: number | {
            span?: number;
            offset?: number;
        };
        sm: number | {
            span?: number;
            offset?: number;
        };
        xs: number | {
            span?: number;
            offset?: number;
        };
        offset: number;
        flex: string | number;
        order: number;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Col').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    span: number;
    xxl: number | {
        span?: number;
        offset?: number;
    };
    xl: number | {
        span?: number;
        offset?: number;
    };
    lg: number | {
        span?: number;
        offset?: number;
    };
    md: number | {
        span?: number;
        offset?: number;
    };
    sm: number | {
        span?: number;
        offset?: number;
    };
    xs: number | {
        span?: number;
        offset?: number;
    };
    offset: number;
    flex: string | number;
    order: number;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
