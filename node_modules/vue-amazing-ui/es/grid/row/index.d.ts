export type { Props as RowProps, Responsive } from './Row';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Row').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        width: string | number;
        wrap: boolean;
        justify: "start" | "end" | "center" | "space-around" | "space-between" | "space-evenly";
        align: "top" | "middle" | "bottom" | "stretch";
        gutter: number | [number | import('./Row').Responsive, number | import('./Row').Responsive] | import('./Row').Responsive;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Row').Props> & Readonly<{}>, {}, {}, {}, {}, {
        width: string | number;
        wrap: boolean;
        justify: "start" | "end" | "center" | "space-around" | "space-between" | "space-evenly";
        align: "top" | "middle" | "bottom" | "stretch";
        gutter: number | [number | import('./Row').Responsive, number | import('./Row').Responsive] | import('./Row').Responsive;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Row').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    width: string | number;
    wrap: boolean;
    justify: "start" | "end" | "center" | "space-around" | "space-between" | "space-evenly";
    align: "top" | "middle" | "bottom" | "stretch";
    gutter: number | [number | import('./Row').Responsive, number | import('./Row').Responsive] | import('./Row').Responsive;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
