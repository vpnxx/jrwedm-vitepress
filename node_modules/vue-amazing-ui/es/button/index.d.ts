export type { Props } from './Button';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Button').Props> & Readonly<{
        onClick?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        click: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        size: "small" | "middle" | "large";
        type: "default" | "reverse" | "primary" | "danger" | "dashed" | "text" | "link";
        icon: import('vue').VNode | import('vue').Slot;
        target: "_self" | "_blank";
        color: string;
        shape: "default" | "circle" | "round";
        href: string;
        keyboard: boolean;
        disabled: boolean;
        block: boolean;
        ghost: boolean;
        buttonClass: string;
        loading: boolean;
        loadingType: "static" | "dynamic";
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Button').Props> & Readonly<{
        onClick?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        size: "small" | "middle" | "large";
        type: "default" | "reverse" | "primary" | "danger" | "dashed" | "text" | "link";
        icon: import('vue').VNode | import('vue').Slot;
        target: "_self" | "_blank";
        color: string;
        shape: "default" | "circle" | "round";
        href: string;
        keyboard: boolean;
        disabled: boolean;
        block: boolean;
        ghost: boolean;
        buttonClass: string;
        loading: boolean;
        loadingType: "static" | "dynamic";
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Button').Props> & Readonly<{
    onClick?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    click: (...args: any[]) => void;
}, string, {
    size: "small" | "middle" | "large";
    type: "default" | "reverse" | "primary" | "danger" | "dashed" | "text" | "link";
    icon: import('vue').VNode | import('vue').Slot;
    target: "_self" | "_blank";
    color: string;
    shape: "default" | "circle" | "round";
    href: string;
    keyboard: boolean;
    disabled: boolean;
    block: boolean;
    ghost: boolean;
    buttonClass: string;
    loading: boolean;
    loadingType: "static" | "dynamic";
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        icon?(_: {}): any;
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
