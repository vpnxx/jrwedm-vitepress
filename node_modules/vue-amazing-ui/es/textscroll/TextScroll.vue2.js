import { defineComponent as te, ref as r, computed as $, watch as W, nextTick as q, createElementBlock as o, openBlock as s, normalizeStyle as S, unref as w, createElementVNode as J, normalizeClass as C, Fragment as p, renderList as O, createBlock as h, resolveDynamicComponent as P, withCtx as f, mergeProps as b, createTextVNode as m, toDisplayString as y, createVNode as se, TransitionGroup as re, withDirectives as oe, vShow as ae } from "vue";
import x from "../ellipsis/index.js";
import { useInject as ie, useResizeObserver as ne, cancelRaf as A, rafTimeout as ue } from "../utils/index.js";
const de = /* @__PURE__ */ te({
  __name: "TextScroll",
  props: {
    items: { default: () => [] },
    single: { type: Boolean, default: !1 },
    width: { default: "100%" },
    height: { default: 50 },
    itemStyle: { default: () => ({}) },
    hrefHoverColor: { default: void 0 },
    amount: { type: [Number, Boolean], default: 4 },
    gap: { default: 20 },
    speed: { default: 48 },
    vertical: { type: Boolean, default: !1 },
    duration: { default: 1e3 },
    interval: { default: 3e3 },
    ellipsis: { type: Boolean, default: !1 },
    ellipsisProps: { default: () => ({}) },
    pauseOnMouseEnter: { type: Boolean, default: !1 }
  },
  emits: ["click"],
  setup(K, { expose: Q, emit: U }) {
    const t = K, g = r(), D = r(0), I = r(), R = r(), N = r(0), v = r("paused"), M = r(!0), k = r(0), u = r(), a = r(!0), i = r([]), { colorPalettes: V } = ie("TextScroll"), X = U, z = $(() => i.value.length), F = $(() => ({
      width: typeof t.width == "number" ? `${t.width}px` : t.width,
      height: `${t.height}px`
    })), H = $(() => t.single ? 1 : t.amount === !1 ? 0 : t.amount), B = $(() => t.amount === !1 ? "auto" : `${parseFloat((D.value / H.value).toFixed(2)) - t.gap}px`), Y = $(() => N.value / t.speed);
    W(
      () => t.items,
      () => {
        t.single ? i.value = [t.items] : t.vertical && t.items.length === 1 ? i.value = [...t.items, ...t.items] : i.value = [...t.items];
      },
      {
        immediate: !0,
        deep: !0
      }
    ), W(i, () => {
      G();
    }), W(
      () => [t.vertical, t.duration, t.interval],
      () => {
        j();
      },
      {
        deep: !0,
        flush: "post"
      }
    ), ne([g, R, I], () => {
      j();
    });
    function j() {
      u.value && A(u.value), a.value || (a.value = !0), t.vertical || Z(), c();
    }
    function Z() {
      D.value = g.value.offsetWidth, N.value = R.value.offsetWidth;
    }
    function _() {
      v.value = "paused", q(() => {
        g.value?.offsetTop, v.value = "running";
      });
    }
    function ee() {
      _();
    }
    function le() {
      u.value = ue(
        () => {
          a.value && (a.value = !1), k.value = (k.value + 1) % z.value;
        },
        a.value ? t.interval : t.interval + t.duration,
        !0
      );
    }
    function E(e) {
      X("click", e);
    }
    function c() {
      t.vertical ? z.value >= 1 && le() : z.value >= H.value && (M.value = !1, v.value = "running");
    }
    function T() {
      t.vertical ? (a.value = !0, u.value && A(u.value)) : v.value = "paused";
    }
    function G() {
      t.vertical ? (u.value && A(u.value), k.value !== 0 ? (k.value = 0, a.value = !1) : a.value = !0, c()) : (v.value = "paused", M.value = !0, q(() => {
        g.value?.offsetTop, c();
      }));
    }
    return Q({
      start: c,
      stop: T,
      reset: G
    }), (e, n) => e.vertical ? (s(), o("div", {
      key: 1,
      ref_key: "verticalRef",
      ref: I,
      class: "text-scroll-vertical",
      style: S([
        F.value,
        `
        --text-scroll-shadow-color: #d3d3d3;
        --text-scroll-bg-color: #fff;
        --text-scroll-href-hover-color: ${e.hrefHoverColor || w(V)[5]};
        --text-scroll-duration: ${e.duration}ms;
        --text-scroll-timing-function: ease;
        --text-scroll-scale: 0.5;
        --text-scroll-item-padding: ${e.gap}px;
      `
      ]),
      onMouseenter: n[2] || (n[2] = (l) => e.pauseOnMouseEnter ? T() : () => !1),
      onMouseleave: n[3] || (n[3] = (l) => e.pauseOnMouseEnter ? c() : () => !1)
    }, [
      se(re, { name: "slide" }, {
        default: f(() => [
          (s(!0), o(p, null, O(i.value, (l, d) => oe((s(), o("div", {
            class: "scroll-item-wrap",
            key: d
          }, [
            (s(), h(P(l.href ? "a" : "div"), {
              class: C(["scroll-item", { "href-item": !e.ellipsis && l.href }]),
              style: S(e.ellipsis ? {} : e.itemStyle),
              title: e.ellipsis ? null : l.title,
              href: l.href,
              target: l.target,
              onClick: (L) => E(l)
            }, {
              default: f(() => [
                e.ellipsis ? (s(), h(w(x), b({
                  key: 0,
                  "content-class": `${l.href ? "href-item" : null}`,
                  "content-style": { ...e.itemStyle, maxWidth: "100%" }
                }, { ref_for: !0 }, e.ellipsisProps), {
                  default: f(() => [
                    m(y(l.title), 1)
                  ]),
                  _: 2
                }, 1040, ["content-class", "content-style"])) : (s(), o(p, { key: 1 }, [
                  m(y(l.title), 1)
                ], 64))
              ]),
              _: 2
            }, 1032, ["class", "style", "title", "href", "target", "onClick"]))
          ])), [
            [ae, k.value === d]
          ])), 128))
        ]),
        _: 1
      })
    ], 36)) : (s(), o("div", {
      key: 0,
      ref_key: "horizontalRef",
      ref: g,
      class: "text-scroll-horizontal",
      style: S([
        F.value,
        `
        --text-scroll-shadow-color: #d3d3d3;
        --text-scroll-bg-color: #fff;
        --text-scroll-href-hover-color: ${e.hrefHoverColor || w(V)[5]};
        --text-scroll-item-gap: ${e.gap}px;
        --text-scroll-play-state: ${v.value};
        --text-scroll-duration: ${Y.value}s;
        --text-scroll-delay: 0s;
        --text-scroll-iteration-count: infinite;
      `
      ]),
      onMouseenter: n[0] || (n[0] = (l) => e.pauseOnMouseEnter ? T() : () => !1),
      onMouseleave: n[1] || (n[1] = (l) => e.pauseOnMouseEnter ? c() : () => !1)
    }, [
      J("div", {
        ref_key: "groupRef",
        ref: R,
        class: C(["scroll-items-group", { "scroll-items-reset": M.value }]),
        onAnimationiteration: ee
      }, [
        (s(!0), o(p, null, O(i.value, (l, d) => (s(), h(P(l.href ? "a" : "div"), {
          class: C(["scroll-item", { "href-item": !e.ellipsis && l.href }]),
          style: S([e.ellipsis ? null : e.itemStyle, `width: ${B.value};`]),
          key: d,
          title: e.ellipsis ? null : l.title,
          href: l.href,
          target: l.target,
          onClick: (L) => E(l)
        }, {
          default: f(() => [
            e.ellipsis ? (s(), h(w(x), b({
              key: 0,
              "max-width": B.value,
              "content-class": `${l.href ? "href-item" : null}`,
              "content-style": e.itemStyle
            }, { ref_for: !0 }, e.ellipsisProps), {
              default: f(() => [
                m(y(l.title), 1)
              ]),
              _: 2
            }, 1040, ["max-width", "content-class", "content-style"])) : (s(), o(p, { key: 1 }, [
              m(y(l.title), 1)
            ], 64))
          ]),
          _: 2
        }, 1032, ["class", "style", "title", "href", "target", "onClick"]))), 128))
      ], 34),
      J("div", {
        class: C(["scroll-items-group", { "scroll-items-reset": M.value }])
      }, [
        (s(!0), o(p, null, O(i.value, (l, d) => (s(), h(P(l.href ? "a" : "div"), {
          class: C(["scroll-item", { "href-item": !e.ellipsis && l.href }]),
          style: S([e.ellipsis ? null : e.itemStyle, `width: ${B.value};`]),
          key: d,
          title: e.ellipsis ? null : l.title,
          href: l.href,
          target: l.target,
          onClick: (L) => E(l)
        }, {
          default: f(() => [
            e.ellipsis ? (s(), h(w(x), b({
              key: 0,
              "max-width": B.value,
              "content-class": `${l.href ? "href-item" : null}`,
              "content-style": e.itemStyle
            }, { ref_for: !0 }, e.ellipsisProps), {
              default: f(() => [
                m(y(l.title), 1)
              ]),
              _: 2
            }, 1040, ["max-width", "content-class", "content-style"])) : (s(), o(p, { key: 1 }, [
              m(y(l.title), 1)
            ], 64))
          ]),
          _: 2
        }, 1032, ["class", "style", "title", "href", "target", "onClick"]))), 128))
      ], 2)
    ], 36));
  }
});
export {
  de as default
};
