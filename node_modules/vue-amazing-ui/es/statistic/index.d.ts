export type { Props } from './Statistic';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Statistic').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        title: string;
        value: string | number;
        valueStyle: import('vue').CSSProperties;
        separator: string;
        prefix: string;
        suffix: string;
        precision: number;
        formatter: Function;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Statistic').Props> & Readonly<{}>, {}, {}, {}, {}, {
        title: string;
        value: string | number;
        valueStyle: import('vue').CSSProperties;
        separator: string;
        prefix: string;
        suffix: string;
        precision: number;
        formatter: Function;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Statistic').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    title: string;
    value: string | number;
    valueStyle: import('vue').CSSProperties;
    separator: string;
    prefix: string;
    suffix: string;
    precision: number;
    formatter: Function;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        title?(_: {}): any;
        prefix?(_: {}): any;
        default?(_: {}): any;
        suffix?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
