export type { Props } from './DatePicker';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./DatePicker').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        size: "small" | "middle" | "large";
        mode: "time" | "date" | "week" | "month" | "year";
        width: string | number;
        range: boolean;
        showTime: boolean;
        showToday: boolean;
        maxRange: number;
        modelType: "timestamp" | "format";
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./DatePicker').Props> & Readonly<{}>, {}, {}, {}, {}, {
        size: "small" | "middle" | "large";
        mode: "time" | "date" | "week" | "month" | "year";
        width: string | number;
        range: boolean;
        showTime: boolean;
        showToday: boolean;
        maxRange: number;
        modelType: "timestamp" | "format";
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./DatePicker').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    size: "small" | "middle" | "large";
    mode: "time" | "date" | "week" | "month" | "year";
    width: string | number;
    range: boolean;
    showTime: boolean;
    showToday: boolean;
    maxRange: number;
    modelType: "timestamp" | "format";
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
