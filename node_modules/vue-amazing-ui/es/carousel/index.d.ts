export type { Props, Image } from './Carousel';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Carousel').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        onClick?: ((...args: any[]) => any) | undefined;
    }>, {
        to: (n: number) => void;
        prev: () => void;
        next: () => void;
        getCurrentIndex: () => number;
    }, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        change: (...args: any[]) => void;
        click: (...args: any[]) => void;
    }, import('vue').PublicProps, {
        width: number | string;
        height: number | string;
        showArrow: boolean;
        images: import('./Carousel').Image[];
        autoplay: boolean;
        pauseOnMouseEnter: boolean;
        effect: "slide" | "fade";
        interval: number;
        arrowColor: string;
        arrowSize: number;
        dots: boolean;
        dotSize: number;
        dotColor: string;
        dotActiveColor: string;
        dotStyle: import('vue').CSSProperties;
        dotActiveStyle: import('vue').CSSProperties;
        dotPosition: "bottom" | "top" | "left" | "right";
        dotsTrigger: "click" | "hover";
        spinProps: object;
        fadeDuration: number;
        fadeFunction: string;
        slideDuration: number;
        slideFunction: string | number[];
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {
        carouselRef: HTMLDivElement;
    }, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Carousel').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        onClick?: ((...args: any[]) => any) | undefined;
    }>, {
        to: (n: number) => void;
        prev: () => void;
        next: () => void;
        getCurrentIndex: () => number;
    }, {}, {}, {}, {
        width: number | string;
        height: number | string;
        showArrow: boolean;
        images: import('./Carousel').Image[];
        autoplay: boolean;
        pauseOnMouseEnter: boolean;
        effect: "slide" | "fade";
        interval: number;
        arrowColor: string;
        arrowSize: number;
        dots: boolean;
        dotSize: number;
        dotColor: string;
        dotActiveColor: string;
        dotStyle: import('vue').CSSProperties;
        dotActiveStyle: import('vue').CSSProperties;
        dotPosition: "bottom" | "top" | "left" | "right";
        dotsTrigger: "click" | "hover";
        spinProps: object;
        fadeDuration: number;
        fadeFunction: string;
        slideDuration: number;
        slideFunction: string | number[];
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Carousel').Props> & Readonly<{
    onChange?: ((...args: any[]) => any) | undefined;
    onClick?: ((...args: any[]) => any) | undefined;
}>, {
    to: (n: number) => void;
    prev: () => void;
    next: () => void;
    getCurrentIndex: () => number;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    change: (...args: any[]) => void;
    click: (...args: any[]) => void;
}, string, {
    width: number | string;
    height: number | string;
    showArrow: boolean;
    images: import('./Carousel').Image[];
    autoplay: boolean;
    pauseOnMouseEnter: boolean;
    effect: "slide" | "fade";
    interval: number;
    arrowColor: string;
    arrowSize: number;
    dots: boolean;
    dotSize: number;
    dotColor: string;
    dotActiveColor: string;
    dotStyle: import('vue').CSSProperties;
    dotActiveStyle: import('vue').CSSProperties;
    dotPosition: "bottom" | "top" | "left" | "right";
    dotsTrigger: "click" | "hover";
    spinProps: object;
    fadeDuration: number;
    fadeFunction: string;
    slideDuration: number;
    slideFunction: string | number[];
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & import('vue').Plugin;
export default _default;
