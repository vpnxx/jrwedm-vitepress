export type { Props } from './Popover';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Popover').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        title: string;
        content: string;
        contentStyle: import('vue').CSSProperties;
        tooltipStyle: import('vue').CSSProperties;
        keyboard: boolean;
        titleStyle: import('vue').CSSProperties;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, HTMLDivElement, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Popover').Props> & Readonly<{}>, {}, {}, {}, {}, {
        title: string;
        content: string;
        contentStyle: import('vue').CSSProperties;
        tooltipStyle: import('vue').CSSProperties;
        keyboard: boolean;
        titleStyle: import('vue').CSSProperties;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Popover').Props> & Readonly<{}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, {
    title: string;
    content: string;
    contentStyle: import('vue').CSSProperties;
    tooltipStyle: import('vue').CSSProperties;
    keyboard: boolean;
    titleStyle: import('vue').CSSProperties;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        title?(_: {}): any;
        content?(_: {}): any;
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
