export type { Props, Option } from './Checkbox';
declare const _default: {
    new (...args: any[]): import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Checkbox').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:checked"?: ((...args: any[]) => any) | undefined;
        "onUpdate:value"?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
        change: (...args: any[]) => void;
        "update:checked": (...args: any[]) => void;
        "update:value": (...args: any[]) => void;
    }, import('vue').PublicProps, {
        disabled: boolean;
        value: (string | number)[];
        vertical: boolean;
        gap: number | number[];
        options: import('./Checkbox').Option[];
        checked: boolean;
        indeterminate: boolean;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Checkbox').Props> & Readonly<{
        onChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:checked"?: ((...args: any[]) => any) | undefined;
        "onUpdate:value"?: ((...args: any[]) => any) | undefined;
    }>, {}, {}, {}, {}, {
        disabled: boolean;
        value: (string | number)[];
        vertical: boolean;
        gap: number | number[];
        options: import('./Checkbox').Option[];
        checked: boolean;
        indeterminate: boolean;
    }>;
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import('vue').ComponentOptionsBase<Readonly<import('./Checkbox').Props> & Readonly<{
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:checked"?: ((...args: any[]) => any) | undefined;
    "onUpdate:value"?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    change: (...args: any[]) => void;
    "update:checked": (...args: any[]) => void;
    "update:value": (...args: any[]) => void;
}, string, {
    disabled: boolean;
    value: (string | number)[];
    vertical: boolean;
    gap: number | number[];
    options: import('./Checkbox').Option[];
    checked: boolean;
    indeterminate: boolean;
}, {}, string, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, import('vue').ComponentProvideOptions> & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {
            option: import('./Checkbox').Option;
            label: string;
            index: number;
        }): any;
        default?(_: {}): any;
    };
}) & import('vue').Plugin;
export default _default;
