import { defineComponent as v, computed as l, createElementBlock as r, openBlock as o, normalizeStyle as d, normalizeClass as w, createCommentVNode as s, createElementVNode as n, renderSlot as i, createTextVNode as u, toDisplayString as f, createVNode as b, unref as S, mergeProps as g, withCtx as k } from "vue";
import z from "../skeleton/index.js";
import { useSlotsExist as B } from "../utils/index.js";
const C = { class: "head-wrapper" }, E = {
  key: 0,
  class: "head-title"
}, $ = {
  key: 1,
  class: "head-extra"
}, T = /* @__PURE__ */ v({
  __name: "Card",
  props: {
    width: { default: "auto" },
    bordered: { type: Boolean, default: !0 },
    size: { default: "middle" },
    hoverable: { type: Boolean, default: !1 },
    loading: { type: Boolean, default: !1 },
    skeletonProps: { default: () => ({}) },
    title: { default: void 0 },
    extra: { default: void 0 },
    headStyle: { default: () => ({}) },
    bodyStyle: { default: () => ({}) }
  },
  setup(p) {
    const t = p, a = B(["title", "extra"]), c = l(() => typeof t.width == "number" ? `${t.width}px` : t.width), h = l(() => a.title || a.extra || t.title || t.extra), m = l(() => a.title || t.title), y = l(() => a.extra || t.extra);
    return (e, N) => (o(), r("div", {
      class: w(["card-wrap", {
        "card-bordered": e.bordered,
        "card-small": e.size === "small",
        "card-middle": e.size === "middle",
        "card-large": e.size === "large",
        "card-hoverable": e.hoverable
      }]),
      style: d(`width: ${c.value};`)
    }, [
      h.value ? (o(), r("div", {
        key: 0,
        class: "card-head",
        style: d(e.headStyle)
      }, [
        n("div", C, [
          m.value ? (o(), r("div", E, [
            i(e.$slots, "title", {}, () => [
              u(f(e.title), 1)
            ], !0)
          ])) : s("", !0),
          y.value ? (o(), r("div", $, [
            i(e.$slots, "extra", {}, () => [
              u(f(e.extra), 1)
            ], !0)
          ])) : s("", !0)
        ])
      ], 4)) : s("", !0),
      n("div", {
        class: "card-body",
        style: d(e.bodyStyle)
      }, [
        b(S(z), g({
          title: !1,
          loading: e.loading
        }, e.skeletonProps), {
          default: k(() => [
            i(e.$slots, "default", {}, void 0, !0)
          ]),
          _: 3
        }, 16, ["loading"])
      ], 4)
    ], 6));
  }
});
export {
  T as default
};
