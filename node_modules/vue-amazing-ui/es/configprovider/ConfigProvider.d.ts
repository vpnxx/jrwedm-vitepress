export interface Theme {
    common?: {
        primaryColor?: string;
    };
    Alert?: {
        primaryColor?: string;
    };
    BackTop?: {
        primaryColor?: string;
    };
    Button?: {
        primaryColor?: string;
    };
    Calendar?: {
        primaryColor?: string;
    };
    Carousel?: {
        primaryColor?: string;
    };
    Checkbox?: {
        primaryColor?: string;
    };
    ColorPicker?: {
        primaryColor?: string;
    };
    DatePicker?: {
        primaryColor?: string;
    };
    FloatButton?: {
        primaryColor?: string;
    };
    Image?: {
        primaryColor?: string;
    };
    Input?: {
        primaryColor?: string;
    };
    InputNumber?: {
        primaryColor?: string;
    };
    InputSearch?: {
        primaryColor?: string;
    };
    LoadingBar?: {
        primaryColor?: string;
    };
    Message?: {
        primaryColor?: string;
    };
    Modal?: {
        primaryColor?: string;
    };
    Notification?: {
        primaryColor?: string;
    };
    Pagination?: {
        primaryColor?: string;
    };
    Popconfirm?: {
        primaryColor?: string;
    };
    Progress?: {
        primaryColor?: string;
    };
    Radio?: {
        primaryColor?: string;
    };
    Select?: {
        primaryColor?: string;
    };
    Slider?: {
        primaryColor?: string;
    };
    Spin?: {
        primaryColor?: string;
    };
    Steps?: {
        primaryColor?: string;
    };
    Swiper?: {
        primaryColor?: string;
    };
    Switch?: {
        primaryColor?: string;
    };
    Tabs?: {
        primaryColor?: string;
    };
    Textarea?: {
        primaryColor?: string;
    };
    TextScroll?: {
        primaryColor?: string;
    };
    Upload?: {
        primaryColor?: string;
    };
}
export interface Props {
    theme?: Theme;
    abstract?: boolean;
    tag?: string;
}
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: {
        default?(_: {}): any;
        default?(_: {}): any;
    };
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<Props, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<Props> & Readonly<{}>, {
    theme: Theme;
    abstract: boolean;
    tag: string;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
